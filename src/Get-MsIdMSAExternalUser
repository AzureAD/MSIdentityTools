<#
.SYNOPSIS
    Returns a list of all the Microsoft Account (MSA) users in the tenant.
    
.EXAMPLE
    PS > Get-MsIdMSAExternalUser

#>
function Get-MsIdMSAExternalUser {
    [CmdletBinding()]

    param ()

    $graphBaseUri = "https://graph.microsoft.com/$((Get-MgProfile).Name)"
    $pageCount = 100
    $guestUserUri = $graphBaseUri + "/users?`$filter=userType eq 'Guest'&`$select=id,userPrincipalName,mail,displayName,identities&`$count=true&`$top=$pageCount"

    $results = Invoke-MgGraphRequest -Uri $guestUserUri -Headers @{ ConsistencyLevel = 'eventual' }
    $count = Get-ObjectPropertyValue $results '@odata.count'
    $currentPage = 0
    $hasMoreData = $true
    $userIndex = 1

    if ($count -eq 0) {
        Write-Host "No guest users in this tenant."
    }
    elseif ($count -gt 0) {
        while ($hasMoreData) {     
            $percentCompleted = $currentPage * $pageCount / $count * 100
            $currentPage += 1
            Write-Progress -Activity "Checking Guest Users" -PercentComplete $percentCompleted
            
            foreach ($userObject in (Get-ObjectPropertyValue $results 'value')) {
                [Microsoft.Graph.PowerShell.Models.MicrosoftGraphUser1]$user = $userObject
                
                Write-Verbose "$userIndex / $count"
                $userIndex += 1
                $isMSA = $false
                foreach ($identity in (Get-ObjectPropertyValue $user 'identities')) {
                    if ((Get-ObjectPropertyValue $identity 'issuer') -eq 'MicrosoftAccount') {
                        $isMSA = $true
                        Write-Verbose "$($user.userPrincipalName)  = MSA user"
                        Write-Output $user
                        break;
                    }
                }

                if (!$isMSA) 
                {
                    Write-Verbose "Skipping. $($user.userPrincipalName) <> MSA user"
                }
            }
        
            $nextLink = Get-ObjectPropertyValue $results '@odata.nextLink'
            if ($nextLink) {
                $results = Invoke-MgGraphRequest -Uri $nextLink -Headers @{ ConsistencyLevel = 'eventual' }
            }
            else {
                $hasMoreData = $false
            }
            
        } 
        Write-Progress -Activity "Checking Guest Users" -Completed
    }
}
